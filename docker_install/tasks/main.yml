---
- name: Ensure old Docker packages are removed
  apt:
    name:
      - docker.io
      - docker-doc
      - docker-compose
      - podman-docker
      - containerd
      - runc
    state: absent
  ignore_errors: yes

- name: Update APT package cache
  apt:
    update_cache: yes

- name: Install required dependencies
  apt:
    name:
      - ca-certificates
      - curl
    state: present

- name: Add Docker GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/debian/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
  register: gpg_key_added

- name: Ensure Docker repository is added
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
    state: present
  register: docker_repo_added

- name: Update APT cache after adding repository
  apt:
    update_cache: yes
  when: docker_repo_added.changed

- name: Install Docker packages
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: Ensure Docker service is started and enabled
  systemd:
    name: docker
    state: started
    enabled: yes

- name: Test Docker installation with hello-world
  command: docker run hello-world
  register: docker_test
  failed_when: "'Hello from Docker!' not in docker_test.stdout"

- name: Add current user to the Docker group
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes

# tasks file for docker_install
